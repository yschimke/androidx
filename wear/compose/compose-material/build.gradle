/*
 * Copyright 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.LibraryType
import androidx.build.AndroidXComposePlugin

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)

dependencies {
    kotlinPlugin(projectOrArtifact(":compose:compiler:compiler"))

    if(!AndroidXComposePlugin.isMultiplatformEnabled(project)) {
        api(projectOrArtifact(":compose:foundation:foundation"))
        api(projectOrArtifact(":compose:ui:ui"))
        api(projectOrArtifact(":compose:ui:ui-text"))
        api(projectOrArtifact(":compose:runtime:runtime"))

        implementation(libs.kotlinStdlib)
        implementation(projectOrArtifact(":compose:animation:animation"))
        implementation(projectOrArtifact(":compose:material:material"))
        implementation(projectOrArtifact(":compose:material:material-ripple"))
        implementation(projectOrArtifact(":compose:ui:ui-util"))
        implementation(project(":wear:compose:compose-foundation"))
        implementation(projectOrArtifact(":profileinstaller:profileinstaller"))

        androidTestImplementation(projectOrArtifact(":compose:ui:ui-test"))
        androidTestImplementation(projectOrArtifact(":compose:ui:ui-test-junit4"))
        androidTestImplementation(projectOrArtifact(":compose:test-utils"))

        androidTestImplementation(projectOrArtifact(":test:screenshot:screenshot"))
        androidTestImplementation(libs.testRunner)
        androidTestImplementation(libs.truth)

        samples(project(":wear:compose:compose-material-samples"))
    }
}

if(AndroidXComposePlugin.isMultiplatformEnabled(project)) {
    androidXComposeMultiplatform {
        android()
        desktop()
    }

    kotlin {
        /*
         * When updating dependencies, make sure to make the an an analogous update in the
         * corresponding block above
         */
        sourceSets {
            commonMain.dependencies {
                implementation(libs.kotlinStdlibCommon)

                api(projectOrArtifact(":compose:foundation:foundation"))
                api(projectOrArtifact(":compose:ui:ui"))
                api(projectOrArtifact(":compose:ui:ui-text"))
                api(projectOrArtifact(":compose:runtime:runtime"))
                api("androidx.annotation:annotation:1.1.0")

                implementation(projectOrArtifact(":compose:animation:animation"))
                implementation(projectOrArtifact(":compose:material:material"))
                implementation(projectOrArtifact(":compose:material:material-ripple"))
                implementation(projectOrArtifact(":compose:ui:ui-util"))
                implementation(project(":wear:compose:compose-foundation"))
            }
            jvmMain.dependencies {
                implementation(libs.kotlinStdlib)
            }

            commonTest.dependencies {
                implementation(kotlin("test-junit"))
            }
            androidAndroidTest.dependencies {
                implementation(libs.testExtJunit)
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.truth)
                implementation(projectOrArtifact(":compose:ui:ui-util"))
                implementation(projectOrArtifact(":compose:ui:ui-test"))
                implementation(projectOrArtifact(":compose:ui:ui-test-junit4"))
                implementation(projectOrArtifact(":compose:test-utils"))
                implementation(projectOrArtifact(":test:screenshot:screenshot"))
            }
        }
    }
    dependencies {
        samples(project(":wear:compose:compose-material-samples"))
    }
}

android {
    defaultConfig {
        minSdkVersion 25
    }
    buildTypes.all {
        consumerProguardFiles "proguard-rules.pro"
    }
    // Use Robolectric 4.+
    testOptions.unitTests.includeAndroidResources = true
    sourceSets.androidTest.assets.srcDirs +=
            project.rootDir.absolutePath + "/../../golden/wear/compose/material"
    namespace "androidx.wear.compose.material"
}

androidx {
    name = "Android Wear Compose Material"
    type = LibraryType.PUBLISHED_LIBRARY
    mavenGroup = LibraryGroups.WEAR_COMPOSE
    inceptionYear = "2021"
    description = "WearOS Compose Material Library. This library makes it easier for developers " +
            "to write Jetpack Compose applications for Wearable devices that implement Wear " +
            "Material Design UX guidelines and specifications. It builds upon the Jetpack Compose" +
            " libraries."
    targetsJavaConsumers = false
}


